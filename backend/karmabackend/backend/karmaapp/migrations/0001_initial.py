# Generated by Django 3.0.3 on 2020-02-29 21:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_charity', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True)),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female'), ('x', 'Non-binary')], max_length=1, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('postcode', models.CharField(blank=True, max_length=8)),
                ('telephone', models.CharField(blank=True, max_length=12)),
                ('terms_consent', models.BooleanField(default=False)),
                ('terms_consent_datetime', models.DateTimeField(default=None, null=True)),
                ('token', models.CharField(blank=True, default='', max_length=200)),
                ('is_activated', models.BooleanField(default=True)),
                ('activation_token', models.CharField(blank=True, default='', max_length=100)),
                ('activation_token_valid_until', models.DateTimeField(default=django.utils.timezone.now)),
                ('password_reset_token', models.CharField(blank=True, default='', max_length=100)),
                ('password_reset_token_valid_until', models.DateField(default=django.utils.timezone.now)),
                ('magic_link_token', models.CharField(blank=True, default='', max_length=100)),
                ('magic_link_token_valid_until', models.DateField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CharityProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_registration', models.DateField()),
                ('type', models.CharField(choices=[('1', 'Non-government organisation'), ('2', 'Other type'), ('3', 'Other type 2')], max_length=1, null=True)),
                ('charity_number', models.IntegerField()),
                ('exemption', models.CharField(choices=[('1', 'Non-government organisation'), ('2', 'Other type'), ('3', 'Other type 2')], max_length=1, null=True)),
                ('logo', models.URLField(blank=True)),
                ('terms_consent', models.BooleanField(default=False)),
                ('terms_consent_datetime', models.DateTimeField(default=None, null=True)),
                ('token', models.CharField(blank=True, default='', max_length=200)),
                ('is_activated', models.BooleanField(default=True)),
                ('activation_token', models.CharField(blank=True, default='', max_length=100)),
                ('activation_token_valid_until', models.DateTimeField(default=django.utils.timezone.now)),
                ('password_reset_token', models.CharField(blank=True, default='', max_length=100)),
                ('password_reset_token_valid_until', models.DateField(default=django.utils.timezone.now)),
                ('magic_link_token', models.CharField(blank=True, default='', max_length=100)),
                ('magic_link_token_valid_until', models.DateField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='charity_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
